<!DOCTYPE html>
<html xmlns:th="http://www.thymeleaf.org">
<head th:replace="fragments :: page_head(${pageTitle}, 'none')" />


<body>

	<div class="container-fluid">
		<div th:replace="navigation :: menu"></div>

		<div class="text-center m-3">
			<h2>Manage Glass Protectors | [[${pageTitle}]]</h2>
		</div>

		<form th:action="@{/glass_protectors/save}" method="post"
			th:object="${protector}" style="max-width: 700px; margin: 0 auto;"
			enctype="multipart/form-data" id="glassProtectorForm">

			<input type="hidden" th:field="*{id}">
			<div class="border border-secondary rounded p-3">

				<div class="form-group row">
					<label class="col-sm-4 col-form-label">Glass Name:</label>
					<div class="col-sm-8">
						<input th:field="*{name}" type="text" class="form-control"
							required minlength="2" maxlength="45">
					</div>
				</div>


				<div class="form-group row">
					<label class="col-sm-4 col-form-label">Price:</label>
					<div class="col-sm-8">
						<input th:field="*{price}" type="number" step="100.00"
							class="form-control" required>
					</div>
				</div>



				<div class="form-group row">
					<label class="col-sm-4 col-form-label">Primary Model:</label>
					<div class="col-sm-8">
						<select class="form-control" th:field="*{primaryModel}" required>
							<option value="" disabled selected>-- Select Primary
								Model --</option>
							<option th:each="model : ${listPrimaryModels}"
								th:value="${model.id}" th:text="${model.name}"></option>
						</select>
					</div>
				</div>





				<div class="form-group row">
					<label class="col-sm-4 col-form-label">Mobile Brands:</label>
					<div class="col-sm-8">
						<select class="form-control" th:field="*{brand}" required>
							<th:block th:each="brand : ${listBrands}">
								<option th:value="${brand.id}">[[${brand.name}]]</option>
							</th:block>
						</select>
					</div>
				</div>



				<div class="form-group row">
					<label class="col-sm-4 col-form-label">Select Compatible
						Mobiles:</label>
					<div class="col-sm-8">
						<select class="form-control" id="compatibleMobiles"
							th:field="*{compatibleMobiles}" multiple
							style="resize: vertical; height: 200px" required>
							<th:block th:each="mobile : ${listMobiles}">
								<option th:value="${mobile.id}">
									[[${mobile.name}]]</option>
							</th:block>
						</select>

						<div class="form-group row">
							<label class="col-sm-12 col-form-label text-muted"> <small>Hold
									down the Ctrl (Windows) or Command (Mac) button to select
									multiple options.</small>
							</label>
						</div>
					</div>
				</div>

				<div class="form-group row">
					<label class="col-sm-4 col-form-label">Chosen Mobiles:</label>
					<div class="col-sm-8" id="chosenMobiles"></div>
				</div>

				<div class="text-center">
					<input type="submit" class="btn btn-primary m-3" value="Save">
					<input type="button" class="btn btn-secondary" value="Cancel"
						id="buttonCancel">
				</div>

			</div>
		</form>
		<div th:replace="fragments :: footer"></div>
	</div>

	<script>
$(document).ready(function () {
    var dropBrands = $("#brand");
    var divCompatibleMobiles = $("#compatibleMobiles");
    var divChosenMobiles = $("#chosenMobiles");

    divCompatibleMobiles.select2({
        placeholder: "Select Compatible Mobiles",
        allowClear: true,
      
    });

    var selectedMobiles = new Map();

    divCompatibleMobiles.find("option:selected").each(function () {
        selectedMobiles.set($(this).val(), $(this).text());
    });

    dropBrands.change(function () {
        loadMobilesByBrand();
    });

    divCompatibleMobiles.change(function () {
        updateSelections();
    });

    function loadMobilesByBrand() {
        var brandId = dropBrands.val();
        var url = "[[@{/brands/}]]" + brandId + "/mobiles";

        $.get(url, function (responseJSON) {
            divCompatibleMobiles.empty();

            if (responseJSON.length === 0) {
                $("<option>").val("").text("No mobiles available").prop("disabled", true).appendTo(divCompatibleMobiles);
            } else {
                $.each(responseJSON, function (index, mobile) {
                    var option = $("<option>").val(mobile.id).text(mobile.name).appendTo(divCompatibleMobiles);
                    if (selectedMobiles.has(mobile.id.toString())) {
                        option.prop("selected", true);
                    }
                });
            }

            divCompatibleMobiles.trigger('change');
            updateSelections();
        }).fail(function () {
            alert("Error fetching mobiles for brand " + brandId);
        });
    }

    function updateSelections() {
        selectedMobiles.clear();

        divCompatibleMobiles.find("option:selected").each(function () {
            var mobile = $(this);
            selectedMobiles.set(mobile.val(), mobile.text());
        });

        showChosenMobiles();
        updateHiddenInputs();
    }

    function showChosenMobiles() {
        divChosenMobiles.empty();

        selectedMobiles.forEach(function (name, id) {
            var safeName = name.replace(/-/g, '');

            divChosenMobiles.append(
                "<span class='badge badge-success m-1 badge-mobile' style='cursor:pointer;' data-id='" + id + "' title='Delete'>" +
                safeName +
                " <i class='fa fa-times-circle remove-mobile' data-id='" + id + "'></i></span>"
            );
        });

        // Hover: Make icon red
        $(".badge-mobile").hover(
            function () {
                $(this).find('.remove-mobile').addClass('text-danger');
            },
            function () {
                $(this).find('.remove-mobile').removeClass('text-danger');
            }
        );

        // Click: Remove badge and unselect
        $(".badge-mobile").click(function () {
            var badge = $(this);
            var mobileId = badge.data("id");

            selectedMobiles.delete(mobileId);

            divCompatibleMobiles.find("option[value='" + mobileId + "']").prop("selected", false);
            divCompatibleMobiles.trigger('change');

            updateSelections();
        });
    }

    function updateHiddenInputs() {
        $("input[name='compatibleMobiles']").remove();

        selectedMobiles.forEach(function (name, id) {
            $("<input>").attr({
                type: "hidden",
                name: "compatibleMobiles",
                value: id
            }).appendTo("form");
        });
    }

    showChosenMobiles();
    updateHiddenInputs();

    $("form").submit(function (event) {
        updateHiddenInputs();

        if (selectedMobiles.size === 0) {
            event.preventDefault();
            alert("Please select at least one compatible mobile.");
            return false;
        }

        return true;
    });
});

</script>


</body>
</html>
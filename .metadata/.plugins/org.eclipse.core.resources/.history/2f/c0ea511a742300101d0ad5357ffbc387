<!DOCTYPE html>
<html xmlns:th="http://www.thymeleaf.org">
<head th:replace="fragments :: page_head(${pageTitle}, 'none')" />


<body>

	<div class="container-fluid">
		<div th:replace="navigation :: menu"></div>

		<div class="text-center m-3">
			<h2>Manage Glass Protectors | [[${pageTitle}]]</h2>
		</div>

		<form th:action="@{/glass_protectors/save}" method="post"
			th:object="${protector}" style="max-width: 600px; margin: 0 auto;"
			enctype="multipart/form-data" id="glassProtectorForm">

			<input type="hidden" th:field="*{id}">
			<div class="border border-secondary rounded p-3">

				<div class="form-group row">
					<label class="col-sm-4 col-form-label">Glass Name:</label>
					<div class="col-sm-8">
						<input th:field="*{name}" type="text" class="form-control"
							required minlength="2" maxlength="45">
					</div>
				</div>


				<div class="form-group row">
					<label class="col-sm-4 col-form-label">Price:</label>
					<div class="col-sm-8">
						<input th:field="*{price}" type="number" step="100.00"
							class="form-control" required>
					</div>
				</div>



				<div class="form-group row">
					<label class="col-sm-4 col-form-label">Primary Model:</label>
					<div class="col-sm-8">
						<select class="form-control" th:field="*{primaryModel}" required>
							<option value="" disabled selected>-- Select Primary
								Model --</option>
							<option th:each="model : ${listPrimaryModels}"
								th:value="${model.id}" th:text="${model.name}"></option>
						</select>
					</div>
				</div>





				<div class="form-group row">
					<label class="col-sm-4 col-form-label">Mobile Brands:</label>
					<div class="col-sm-8">
						<select class="form-control" th:field="*{brand}" required>
							<th:block th:each="brand : ${listBrands}">
								<option th:value="${brand.id}">[[${brand.name}]]</option>
							</th:block>
						</select>
					</div>
				</div>



				<div class="form-group row">
					<label class="col-sm-4 col-form-label">Select Compatible
						Mobiles:</label>
					<div class="col-sm-8">
						<select class="form-control" id="compatibleMobiles"
							th:field="*{compatibleMobiles}" multiple
							style="resize: vertical; height: 200px" required>
							<th:block th:each="mobile : ${listMobiles}">
								<option th:value="${mobile.id}">
									[[${mobile.name}]]</option>
							</th:block>
						</select>

						<div class="form-group row">
							<label class="col-sm-12 col-form-label text-muted"> <small>Hold
									down the Ctrl (Windows) or Command (Mac) button to select
									multiple options.</small>
							</label>
						</div>
					</div>
				</div>

				<div class="form-group row">
					<label class="col-sm-4 col-form-label">Chosen Mobiles:</label>
					<div class="col-sm-8" id="chosenMobiles"></div>
				</div>

				<div class="text-center">
					<input type="submit" class="btn btn-primary m-3" value="Save">
					<input type="button" class="btn btn-secondary" value="Cancel"
						id="buttonCancel">
				</div>

			</div>
		</form>
		<div th:replace="fragments :: footer"></div>
	</div>

	<script>

	$(document).ready(function () {
	    // Store selected mobiles across brand changes
	    var selectedMobiles = new Map();
	    var mobileBrandMap = new Map(); // Tracks which brand each mobile belongs to
	    
	    // Initialize Select2 with minimal options
	    $(".select2-single").select2();
	    
	    $(".select2-multi").select2({
	        width: "100%",
	        placeholder: "Select compatible models",
	        allowClear: true
	    });
	    
	    // Load stored compatible models (for edit mode)
	    $("#originalCompatibleMobiles span").each(function() {
	        var id = $(this).data("id");
	        var name = $(this).data("name");
	        var brandId = $(this).data("brand");
	        
	        selectedMobiles.set(id.toString(), name);
	        mobileBrandMap.set(id.toString(), brandId.toString());
	    });
	    
	    // Handle brand selection change
	    $("#brand").change(function() {
	        loadMobilesByBrand();
	    });
	    
	    // Handle compatible mobile selection change
	    $("#compatibleMobiles").on("change", function() {
	        updateSelections();
	    });
	    
	    // Load mobiles for selected brand
	    function loadMobilesByBrand() {
	        var brandId = $("#brand").val();
	        if (!brandId) return;
	        
	        var url = "[[@{/brands/}]]" + brandId + "/mobiles";
	        
	        $.get(url, function(responseJSON) {
	            var select = $("#compatibleMobiles");
	            select.empty();
	            
	            if (responseJSON.length === 0) {
	                select.append($("<option>")
	                    .val("")
	                    .text("No mobiles available for this brand")
	                    .prop("disabled", true));
	            } else {
	                $.each(responseJSON, function(index, mobile) {
	                    var option = $("<option>")
	                        .val(mobile.id)
	                        .text(mobile.name)
	                        .appendTo(select);
	                    
	                    // Remember this mobile's brand
	                    mobileBrandMap.set(mobile.id.toString(), brandId);
	                    
	                    // Restore selection if this mobile was previously selected
	                    if (selectedMobiles.has(mobile.id.toString())) {
	                        option.prop("selected", true);
	                    }
	                });
	                
	                // Force Select2 to update its display
	                select.trigger("change");
	            }
	        }).fail(function() {
	            alert("Error loading mobiles for the selected brand.");
	        });
	    }
	    
	    // Update selections based on the select element
	    function updateSelections() {
	        var brandId = $("#brand").val();
	        var select = $("#compatibleMobiles");
	        
	        // Add newly selected items
	        select.find("option:selected").each(function() {
	            var id = $(this).val();
	            var name = $(this).text();
	            
	            selectedMobiles.set(id, name);
	            mobileBrandMap.set(id, brandId);
	        });
	        
	        // Remove unselected items (only from current brand)
	        select.find("option:not(:selected)").each(function() {
	            var id = $(this).val();
	            
	            // Only remove if it belongs to current brand
	            if (mobileBrandMap.get(id) === brandId) {
	                selectedMobiles.delete(id);
	            }
	        });
	        
	        showChosenMobiles();
	        createHiddenInputs();
	    }
	    
	    // Display selected mobiles as badges
	    function showChosenMobiles() {
	        var container = $("#chosenMobiles");
	        container.empty();
	        
	        if (selectedMobiles.size === 0) {
	            container.append('<div>No models selected</div>');
	            return;
	        }
	        
	        selectedMobiles.forEach(function(name, id) {
	            container.append(
	                '<span class="badge badge-info m-1 p-2" data-id="' + id + '">' +
	                name +
	                '<i class="fa fa-times-circle ml-1 remove-mobile" data-id="' + id + '"></i>' +
	                '</span>'
	            );
	        });
	        
	        // Handle remove clicks
	        $(".remove-mobile").click(function() {
	            var id = $(this).data("id");
	            selectedMobiles.delete(id);
	            
	            // Deselect in the select element if visible
	            var brandId = mobileBrandMap.get(id);
	            if (brandId === $("#brand").val()) {
	                $("#compatibleMobiles option[value='" + id + "']").prop("selected", false);
	                $("#compatibleMobiles").trigger("change.select2");
	            }
	            
	            showChosenMobiles();
	            createHiddenInputs();
	        });
	    }
	    
	    // Create hidden inputs for form submission
	    function createHiddenInputs() {
	        // Remove existing hidden inputs
	        $("input[name='compatibleMobileIds']").remove();
	        
	        // Create new hidden inputs
	        selectedMobiles.forEach(function(name, id) {
	            $("<input>")
	                .attr("type", "hidden")
	                .attr("name", "compatibleMobileIds")
	                .val(id)
	                .appendTo("#glassProtectorForm");
	        });
	    }
	    
	    // Form submission validation
	    $("#glassProtectorForm").submit(function(event) {
	        if (selectedMobiles.size === 0) {
	            event.preventDefault();
	            alert("Please select at least one compatible mobile model.");
	            return false;
	        }
	        
	        createHiddenInputs();
	        return true;
	    });
	    
	    // Initialize if brand is already selected (edit mode)
	    var initialBrand = $("#brand").val();
	    if (initialBrand) {
	        loadMobilesByBrand();
	    }
	    
	    // Initialize the display of chosen mobiles
	    showChosenMobiles();
	    createHiddenInputs();
	});
</script>
</body>
</html>
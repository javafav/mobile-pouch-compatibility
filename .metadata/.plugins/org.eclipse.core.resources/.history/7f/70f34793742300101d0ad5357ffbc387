<!DOCTYPE html>
<html xmlns:th="http://www.thymeleaf.org">
<head th:replace="fragments :: page_head(${pageTitle}, 'none')" />


<body>

	<div class="container-fluid">
		<div th:replace="navigation :: menu"></div>

		<div class="text-center m-3">
			<h2>Manage Glass Protectors | [[${pageTitle}]]</h2>
		</div>

		<form th:action="@{/glass_protectors/save}" method="post"
			th:object="${protector}" style="max-width: 600px; margin: 0 auto;"
			enctype="multipart/form-data" id="glassProtectorForm">

			<input type="hidden" th:field="*{id}">
			<div class="border border-secondary rounded p-3">

				<div class="form-group row">
					<label class="col-sm-4 col-form-label">Glass Name:</label>
					<div class="col-sm-8">
						<input th:field="*{name}" type="text" class="form-control"
							required minlength="2" maxlength="45">
					</div>
				</div>


				<div class="form-group row">
					<label class="col-sm-4 col-form-label">Price:</label>
					<div class="col-sm-8">
						<input th:field="*{price}" type="number" step="100.00"
							class="form-control" required>
					</div>
				</div>



				<div class="form-group row">
					<label class="col-sm-4 col-form-label">Primary Model:</label>
					<div class="col-sm-8">
						<select class="form-control" th:field="*{primaryModel}" required>
							<option value="" disabled selected>-- Select Primary
								Model --</option>
							<option th:each="model : ${listPrimaryModels}"
								th:value="${model.id}" th:text="${model.name}"></option>
						</select>
					</div>
				</div>





				<div class="form-group row">
					<label class="col-sm-4 col-form-label">Mobile Brands:</label>
					<div class="col-sm-8">
						<select class="form-control" th:field="*{brand}" required>
							<th:block th:each="brand : ${listBrands}">
								<option th:value="${brand.id}">[[${brand.name}]]</option>
							</th:block>
						</select>
					</div>
				</div>



				<div class="form-group row">
					<label class="col-sm-4 col-form-label">Select Compatible
						Mobiles:</label>
					<div class="col-sm-8">
						<select class="form-control" id="compatibleMobiles"
							th:field="*{compatibleMobiles}" multiple
							style="resize: vertical; height: 200px" required>
							<th:block th:each="mobile : ${listMobiles}">
								<option th:value="${mobile.id}">
									[[${mobile.name}]]</option>
							</th:block>
						</select>

						<div class="form-group row">
							<label class="col-sm-12 col-form-label text-muted"> <small>Hold
									down the Ctrl (Windows) or Command (Mac) button to select
									multiple options.</small>
							</label>
						</div>
					</div>
				</div>

				<div class="form-group row">
					<label class="col-sm-4 col-form-label">Chosen Mobiles:</label>
					<div class="col-sm-8" id="chosenMobiles"></div>
				</div>

				<div class="text-center">
					<input type="submit" class="btn btn-primary m-3" value="Save">
					<input type="button" class="btn btn-secondary" value="Cancel"
						id="buttonCancel">
				</div>

			</div>
		</form>
		<div th:replace="fragments :: footer"></div>
	</div>

	<script>

	$(document).ready(function() {
	    var dropBrands = $("#brand");
	    var divCompatibleMobiles = $("#compatibleMobiles");
	    var divChosenMobiles = $("#chosenMobiles");
	    var selectedMobiles = new Map(); // Store selected mobiles

	    // Initialize Select2 if needed
	    if ($.fn.select2) {
	        divCompatibleMobiles.select2({
	            placeholder: "Select Compatible Mobiles",
	            allowClear: true,
	            width: '100%'
	        });
	    }

	    // Initialize existing selections
	    divCompatibleMobiles.children("option:selected").each(function() {
	        selectedMobiles.set($(this).val(), $(this).text());
	    });

	    dropBrands.change(function() {
	        getMobiles();
	    });

	    divCompatibleMobiles.change(function() {
	        updateSelections();
	    });

	    function loadMobilesByBrand() {
	        var brandId = dropBrands.val();
	        var url = "[[@{/brands/}]]" + brandId + "/mobiles";

	        $.get(url, function(responseJSON) {
	            divCompatibleMobiles.empty();

	            if (responseJSON.length === 0) {
	                $("<option>").val("").text("No mobiles available")
	                    .prop("disabled", true).appendTo(divCompatibleMobiles);
	            } else {
	                $.each(responseJSON, function(index, mobile) {
	                    var option = $("<option>").val(mobile.id).text(mobile.name).appendTo(divCompatibleMobiles);

	                    // If previously selected, re-select
	                    if (selectedMobiles.has(mobile.id.toString())) {
	                        option.prop("selected", true);
	                    }
	                });
	            }

	            divCompatibleMobiles.trigger('change');
	            updateSelections();
	        }).fail(function() {
	            showErrorDialog("Error fetching mobiles for brand: " + brandId);
	        });
	    }

	    function updateSelections() {
	        selectedMobiles.clear();

	        divCompatibleMobiles.find("option:selected").each(function() {
	            var mobile = $(this);
	            selectedMobiles.set(mobile.val(), mobile.text());
	        });

	        showChosenMobiles();
	        updateHiddenInputs();
	    }

	    function showChosenMobiles() {
	        divChosenMobiles.empty();

	        if (selectedMobiles.size === 0) {
	            divChosenMobiles.append("<div class='text-muted'>No mobiles selected</div>");
	            return;
	        }

	        selectedMobiles.forEach(function(name, id) {
	            var mobName = name.replace(/-/g, '');

	            divChosenMobiles.append(
	                "<span class='badge badge-success m-1 remove-badge' style='cursor:pointer;' data-id='" + id + "' title='Click to remove'>" +
	                mobName +
	                " <i class='fa fa-times-circle ml-1'></i></span>"
	            );
	        });

	        // Hover effect to change color
	        $(".remove-badge").hover(
	            function() {
	                $(this).removeClass("badge-success").addClass("badge-danger");
	            },
	            function() {
	                $(this).removeClass("badge-danger").addClass("badge-success");
	            }
	        );

	        // Click badge to remove from both
	        $(".remove-badge").click(function() {
	            var mobileId = $(this).data("id");
	            removeMobile(mobileId);
	        });
	    }

	    function removeMobile(mobileId) {
	        selectedMobiles.delete(mobileId);

	        // Deselect from dropdown
	        divCompatibleMobiles.find("option[value='" + mobileId + "']").prop("selected", false);
	        divCompatibleMobiles.trigger('change');

	        updateSelections();
	    }

	    function updateHiddenInputs() {
	        $("input[name='compatibleMobiles']").remove();

	        selectedMobiles.forEach(function(name, id) {
	            $("<input>").attr({
	                type: "hidden",
	                name: "compatibleMobiles",
	                value: id
	            }).appendTo("#glassProtectorForm"); // Form id specific
	        });
	    }

	    // Cancel button
	    $("#buttonCancel").click(function() {
	        window.location = "[[@{/glass_protectors}]]";
	    });

	    // Form submission
	    $("#glassProtectorForm").submit(function(event) {
	        updateHiddenInputs();

	        if (selectedMobiles.size === 0) {
	            event.preventDefault();
	            showErrorDialog("Please select at least one compatible mobile.");
	            return false;
	        }

	        return true;
	    });

	    // Initial call
	    showChosenMobiles();
	    updateHiddenInputs();
	});


</script>
</body>
</html>